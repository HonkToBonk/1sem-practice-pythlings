# core structure of the bot
import telebot
from telebot import types
from mongoengine import *

bot = telebot.TeleBot('1002991204:AAHnJ2q9kV1htX5iRREZpW0Vg_6xOFOOSao')
connect("cinebot_database")


class State(Document):
    user_id = StringField(required=True, unique=True)
    state = ListField()

@bot.message_handler(commands=['help'])
def help_msg(msg):
    bot.send_message(msg.from_user.id, '–¢—ã –º–æ–∂–µ—à—å –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏–ª–∏ –¥–æ–≤–µ—Ä–∏—Ç—å—Å—è –º–Ω–µ –∏ –≤—ã–±—Ä–∞—Ç—å '
                                           '—Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º –∏–∑ —Ç–µ—Ö, —á—Ç–æ –º–Ω–µ –∏–∑–≤–µ—Å—Ç–Ω—ã. –ù–∞–ø–∏—à–∏ /start –∏ –Ω–∞—á–Ω–µ–º –∏—Å–∫–∞—Ç—å!')

@bot.message_handler(commands=['start', 'restart'])
def welcome_msg(msg):
    try:
        user = State(user_id=str(msg.from_user.id))
        user.save()
    except: pass
    type_reply = types.ReplyKeyboardMarkup(one_time_keyboard = True)
    movie = types.KeyboardButton(text="üé¨ –§–∏–ª—å–º")
    series = types.KeyboardButton(text="üì∫ –°–µ—Ä–∏–∞–ª")
    type_reply.row(movie, series)
    bot.send_message(msg.chat.id, text="–ß—Ç–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, {}?".format(msg.chat.first_name),
                     reply_markup=type_reply)
    State.objects(user_id=str(msg.from_user.id)).update(state='–º–æ–¥')


@bot.message_handler(func = lambda msg: (State.objects(user_id = str(msg.chat.id)))[0].state == '–º–æ–¥')
def mainmenu(msg):
    popular = types.KeyboardButton("–ü–æ–ø—É–ª—è—Ä–Ω–æ–µüçø")
    random = types.KeyboardButton("–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–ºüé≤")
    actor = types.KeyboardButton("–ê–∫—Ç–µ—ÄüíÉüèª")
    director = types.KeyboardButton("–†–µ–∂–∏—Å—Å–µ—ÄüìΩ")
    genre = types.KeyboardButton("–ñ–∞–Ω—Äüé¨")
    name = types.KeyboardButton("–ò–º—è —Ñ–∏–ª—å–º–∞üéô")
    year = types.KeyboardButton("–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ üìÖ ")
    search_reply = types.ReplyKeyboardMarkup(one_time_keyboard = True)
    search_reply.row(actor, director, genre)
    search_reply.row(year, random)
    search_reply.row(popular, name)
    bot.send_message(msg.chat.id, text="–í—ã–±–∏—Ä–∞–π –∫—Ä–∏—Ç–µ—Ä–∏–πüëá", reply_markup=search_reply)
    State.objects(user_id=str(msg.from_user.id)).update(state='–º–µ–Ω—é')



@bot.message_handler(func = lambda msg: (State.objects(user_id = str(msg.chat.id)))[0].state == '–º–µ–Ω—é')
def find_movie(msg):
    if msg.text == "–ü–æ–ø—É–ª—è—Ä–Ω–æ–µüçø" or msg.text.lower() == '–ø–æ–ø—É–ª—è—Ä–Ω–æ–µ':
        State.objects(user_id=str(msg.from_user.id)).update(state='–ø–æ–ø—É–ª—è—Ä–Ω–æ–µ')
    elif msg.text == "–°–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–ºüé≤" or msg.text.lower() == '—Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º':
        State.objects(user_id=str(msg.from_user.id)).update(state='—Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º')
    elif msg.text == "–ê–∫—Ç–µ—ÄüíÉüèª" or msg.text.lower() == '–∞–∫—Ç–µ—Ä':
        State.objects(user_id=str(msg.from_user.id)).update(state='–∞–∫—Ç–µ—Ä')
    elif msg.text == "–†–µ–∂–∏—Å—Å–µ—ÄüìΩ" or msg.text.lower() == '—Ä–µ–∂–∏—Å—Å–µ—Ä':
        State.objects(user_id=str(msg.from_user.id)).update(state='—Ä–µ–∂–∏—Å—Å–µ—Ä')
    elif msg.text == "–ñ–∞–Ω—Äüé¨" or msg.text.lower() == '–∂–∞–Ω—Ä':
        State.objects(user_id=str(msg.from_user.id)).update(state='–∂–∞–Ω—Ä')
    elif msg.text == "–ò–º—è —Ñ–∏–ª—å–º–∞üéô" or msg.text.lower() == '–∏–º—è —Ñ–∏–ª—å–º–∞':
        State.objects(user_id=str(msg.from_user.id)).update(state='–∏–º—è —Ñ–∏–ª—å–º–∞')
    elif msg.text == "–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ üìÖ":
        State.objects(user_id=str(msg.from_user.id)).update(state='–≥–æ–¥ –≤—ã–ø—É—Å–∫–∞')
    else:
        bot.send_message(msg.chat.id, text="–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é")


@bot.message_handler(func = lambda msg: State.objects(user_id = str(msg.chat.id)).first().state == '–ø–æ–ø—É–ª—è—Ä–Ω–æ–µ')
def search_popular():
    pass
@bot.message_handler(func = lambda msg: State.objects(user_id = str(msg.chat.id)).first().state == '—Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∏–ª—å–º')
def search_random():
    pass
@bot.message_handler(func = lambda msg: State.objects(uuser_id = str(msg.chat.id)).first().state == '–∞–∫—Ç–µ—Ä')
def search_actor():
    pass
@bot.message_handler(func = lambda msg: State.objects(user_id = str(msg.chat.id)).first().state == '—Ä–µ–∂–∏—Å—Å–µ—Ä')
def search_director():
    pass
@bot.message_handler(func = lambda msg: State.objects(user_id = str(msg.chat.id)).first().state == '–∂–∞–Ω—Ä')
def search_jenre():
    pass
@bot.message_handler(func = lambda msg: State.objects(user_id = str(msg.chat.id)).first().state == '–∏–º—è —Ñ–∏–ª—å–º–∞')
def search_name():
    pass
@bot.message_handler(func = lambda msg: State.objects(uuser_id = str(msg.chat.id)).first().state == '–≥–æ–¥ –≤—ã–ø—É—Å–∫–∞')
def search_year():
    pass


bot.polling()
